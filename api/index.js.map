{
  "version": 3,
  "sources": ["<stdin>", "../src/entry.server.tsx", "../src/css-theme/styles-context.tsx", "../src/css-theme/emotion-cache.ts", "../src/css-theme/theme.ts", "../src/root.tsx", "../src/Layout/index.tsx", "../src/Layout/footer/index.tsx", "../src/Layout/header/index.tsx", "../src/routes/index.tsx", "../src/pages/Home/index.tsx", "../src/pages/Home/components/games-card-carousel.tsx", "../src/components/card-carousel/card-carousel.tsx", "../src/components/card-carousel/primitive.tsx", "../src/pages/Home/components/scheduled-games-title.tsx", "../utilities/api/types.ts", "../src/pages/Home/loader.ts", "../utilities/api/service.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import type { EntryContext } from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport { renderToString } from 'react-dom/server'\n\nimport { createEmotionCache, theme, StylesContext } from '~/css-theme'\n\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { CacheProvider } from '@emotion/react'\nimport createEmotionServer from '@emotion/server/create-instance'\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache()\n  const { extractCriticalToChunks } = createEmotionServer(cache)\n\n  const MuiRemixServer = () => (\n    <CacheProvider value={cache}>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <RemixServer context={remixContext} url={request.url} />\n      </ThemeProvider>\n    </CacheProvider>\n  )\n\n  // Render the component to a string.\n  const html = renderToString(\n    <StylesContext.Provider value={null}>\n      <MuiRemixServer />\n    </StylesContext.Provider>\n  )\n\n  // Grab the CSS from emotion\n  const emotionChunks = extractCriticalToChunks(html)\n\n  // Re-render including the extracted css.\n  const markup = renderToString(\n    <StylesContext.Provider value={emotionChunks.styles}>\n      <MuiRemixServer />\n    </StylesContext.Provider>\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "import { createContext } from 'react'\n\nexport interface StyleContextData {\n  key: string\n  ids: Array<string>\n  css: string\n}\n\nexport default createContext<null | StyleContextData[]>(null)\n", "import createCache from '@emotion/cache'\n\nconst isBrowser = typeof document !== 'undefined'\n\n// On the client side, Create a meta tag at the top of the <head> and set it as insertionPoint.\n// This assures that MUI styles are loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\nexport function createEmotionCache() {\n  return createCache({ key: 'css' })\n}\n", "import { createTheme } from '@mui/material/styles'\nimport { red } from '@mui/material/colors'\n\n// Create a theme instance.\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n})\n\nexport default theme\n", "import reactCarouselStyles from 'react-multi-carousel/lib/styles.css'\nimport globalStyles from '~/css/global-styles.css'\n\nimport { useContext } from 'react'\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n} from '@remix-run/react'\n\nimport { StylesContext, theme } from '~/css-theme'\n\nimport Layout from '~/Layout'\n\nimport type { LinksFunction, MetaFunction } from '@remix-run/node'\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'Ball Hog',\n  viewport: 'width=device-width,initial-scale=1',\n})\n\nexport const links: LinksFunction = () => {\n  return [\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap',\n    },\n    {\n      rel: 'stylesheet',\n      href: reactCarouselStyles,\n    },\n    {\n      rel: 'stylesheet',\n      href: globalStyles,\n    },\n  ]\n}\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode\n  title?: string\n}) {\n  const styleData = useContext(StylesContext)\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta name=\"theme-color\" content={theme.palette.primary.main} />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n        {styleData?.map(({ key, ids, css }) => (\n          <style\n            key={key}\n            data-emotion={`${key} ${ids.join(' ')}`}\n            dangerouslySetInnerHTML={{ __html: css }}\n            suppressHydrationWarning\n          />\n        ))}\n      </head>\n      <body>\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === 'development' && <LiveReload />}\n      </body>\n    </html>\n  )\n}\n\n// https://remix.run/api/conventions#default-export\n// https://remix.run/api/conventions#route-filenames\n\n// NOTE: When I create a Layout add it here. Make Outlet the child of <Layout />\nexport default function App() {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  )\n}\n\n// https://remix.run/docs/en/v1/api/conventions#errorboundary\n// NOTE: When I create a Layout add it here. Make root <div /> the child of <Layout />\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error)\n\n  return (\n    <Document title=\"Error!\">\n      <div>\n        <h1>Woaa there baller!</h1>\n        <p>{error.message}</p>\n        <hr />\n        <p>We gotta call timeout here something isn't right on our end!!</p>\n      </div>\n    </Document>\n  )\n}\n\n// https://remix.run/docs/en/v1/api/conventions#catchboundary\nexport function CatchBoundary() {\n  const caught = useCatch()\n\n  let message\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </p>\n      )\n      break\n    case 404:\n      message = (\n        <p>Oops! Looks like you tried to visit a page that does not exist.</p>\n      )\n      break\n\n    default:\n      throw new Error(caught.data || caught.statusText)\n  }\n\n  // NOTE: When I create a Layout add it here. Make root <h1> the child of <Layout />\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <h1>\n        {caught.status}: {caught.statusText}\n      </h1>\n      {message}\n    </Document>\n  )\n}\n", "import { Container } from '@mui/material'\nimport { PropsWithChildren } from 'react'\nimport { Footer } from './footer'\nimport { Header } from './header'\n\nexport default function Layout({ children }: PropsWithChildren) {\n  return (\n    <>\n      <Header />\n      <Container maxWidth=\"xl\" sx={{ paddingTop: '2em' }}>\n        {children}\n      </Container>\n      <Footer />\n    </>\n  )\n}\n", "import { Box, Container } from '@mui/material'\n\nexport const Footer = (props: any) => (\n  <>\n    <Box className=\"placeholder-header\" padding=\"4rem\">\n      <h1>FOOTER</h1>\n      <Container\n        maxWidth=\"xl\"\n        sx={{ padding: 0 }}\n        className=\"placeholder-navigation\"\n      >\n        <h1>FOOTER CONTENT</h1>\n      </Container>\n    </Box>\n  </>\n)\n", "import { Box, Container } from '@mui/material'\n\nexport const Header = (props: any) => (\n  <>\n    <Box className=\"placeholder-header\" padding=\"4rem\">\n      <h1>HEADER</h1>\n    </Box>\n    <Container\n      maxWidth=\"xl\"\n      sx={{ padding: 0 }}\n      className=\"placeholder-navigation\"\n    >\n      <h1>NAVIGATION</h1>\n    </Container>\n  </>\n)\n", "export { Home as default } from 'src/pages/Home'\nexport { loader } from 'src/pages/Home/loader'\n", "import { useLoaderData } from '@remix-run/react'\nimport { useEffect } from 'react'\nimport { HomeLoaderData } from './loader'\n\nimport { GamesCardCarousel } from './components/games-card-carousel'\nimport { ScheduledGamesTitle } from './components/scheduled-games-title'\n\nimport { Box } from '@mui/material'\nimport dayjs from 'dayjs'\n\nexport function Home() {\n  const { liveGames, scheduledGames, metaData } =\n    useLoaderData<HomeLoaderData>()\n\n  useEffect(() => {\n    console.log(liveGames, scheduledGames)\n    console.log('meta>>>>>', metaData)\n  })\n\n  const season = metaData?.scheduled?.season || metaData?.live?.season\n\n  return (\n    <Box>\n      <GamesCardCarousel games={liveGames} title=\"Today's Games\" />\n      <GamesCardCarousel\n        games={scheduledGames}\n        title={\n          <ScheduledGamesTitle season={season || dayjs().year().toString()} />\n        }\n      />\n    </Box>\n  )\n}\n", "import {\n  Card,\n  CardContent,\n  Box,\n  Typography,\n  CardActions,\n  Button,\n} from '@mui/material'\n\nimport { CardCarousel } from '~/components/card-carousel'\n\nimport type { CardCarouselProps } from '~/components/card-carousel'\n\nimport type { GamesDTO } from 'utilities/api/dtos'\n\ntype GamesCardCarouselProps = Omit<\n  CardCarouselProps,\n  'totalItems' | 'children' | 'show'\n> & {\n  games: GamesDTO[]\n}\n\nexport const GamesCardCarousel = ({\n  games,\n  ...props\n}: GamesCardCarouselProps) => (\n  <CardCarousel totalItems={games.length} show={4} {...props}>\n    {games.map((game) => (\n      <div key={game.id} style={{ paddingRight: '1em' }}>\n        <Card>\n          <CardContent\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              minWidth: 300,\n              height: 400,\n            }}\n          >\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-evenly\"\n              alignItems=\"center\"\n            >\n              <Typography\n                sx={{ fontSize: 14 }}\n                color=\"text.secondary\"\n                gutterBottom\n              >\n                {game.date}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"text.primary\" gutterBottom>\n                {game.status}\n              </Typography>\n            </Box>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              rowGap=\"1em\"\n              padding=\"1em 1.5em\"\n            >\n              <Box>\n                <Typography\n                  variant=\"subtitle2\"\n                  color=\"text.secondary\"\n                  gutterBottom\n                >\n                  Home\n                </Typography>\n                <Typography variant=\"h6\" color=\"text.primary\" gutterBottom>\n                  {game.home_team.fullName}\n                </Typography>\n                <Typography variant=\"h3\" gutterBottom>\n                  {game.home_team.score}\n                </Typography>\n              </Box>\n              <Box>\n                <Typography\n                  variant=\"subtitle2\"\n                  color=\"text.secondary\"\n                  gutterBottom\n                >\n                  Away\n                </Typography>\n                <Typography variant=\"h6\" color=\"text.primary\" gutterBottom>\n                  {game.visitor_team.fullName}\n                </Typography>\n                <Typography variant=\"h3\" gutterBottom>\n                  {game.visitor_team.score}\n                </Typography>\n              </Box>\n            </Box>\n          </CardContent>\n          <CardActions sx={{ justifyContent: 'center' }}>\n            <Button size=\"small\">View Game</Button>\n          </CardActions>\n        </Card>\n      </div>\n    ))}\n  </CardCarousel>\n)\n", "import { forwardRef, PropsWithChildren, useState } from 'react'\n\nimport { ArrowButtonPrimitive } from './primitive'\n\nimport { useTheme } from '@mui/material/styles'\n\nimport { Box, LinearProgress, Typography } from '@mui/material'\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@mui/icons-material'\n\nimport Carousel from 'react-multi-carousel'\n\nimport type { CarouselProps } from 'react-multi-carousel'\n\nimport type { ArrowButtonProps } from './primitive'\n\nexport type CardCarouselProps = PropsWithChildren<\n  Omit<CarouselProps, 'responsive'> & {\n    autoplay?: boolean\n    totalItems: number\n    show: number\n    title: React.ReactNode\n    titlePosition?: 'left' | 'center'\n  }\n>\n\nconst MaterialArrowButton = forwardRef<HTMLButtonElement, ArrowButtonProps>(\n  ({ onClick, direction, ...props }, ref) => (\n    <ArrowButtonPrimitive\n      ref={ref}\n      direction={direction}\n      size=\"small\"\n      variant=\"text\"\n      onClick={() => onClick()}\n    >\n      {direction === 'right' ? (\n        <KeyboardArrowRight fontSize=\"large\" color=\"primary\" />\n      ) : (\n        <KeyboardArrowLeft fontSize=\"large\" color=\"primary\" />\n      )}\n    </ArrowButtonPrimitive>\n  )\n)\n\nexport function CardCarousel({\n  autoplay = false,\n  children,\n  totalItems,\n  show,\n  title,\n  titlePosition = 'left',\n  ...props\n}: CardCarouselProps) {\n  const theme = useTheme()\n\n  const calculateProgress = (step: number) => {\n    let percentage = 0\n\n    if (step === 0) {\n      // set initial progress\n      percentage = (100 * show) / totalItems\n    } else {\n      const shownStep = step + show\n      percentage = (100 * shownStep) / totalItems\n    }\n\n    return percentage > 100 ? 100 : percentage\n  }\n\n  const [progress, setLinearProgress] = useState(calculateProgress(0))\n\n  const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: show,\n      slidesToSlide: show, // optional, default to 1.\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: show - 2,\n      slidesToSlide: show - 2, // optional, default to 1.\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n    },\n  }\n\n  return (\n    <Box paddingBottom=\"2rem\">\n      <Typography\n        align={titlePosition}\n        variant=\"h2\"\n        sx={{ padding: '1rem', letterSpacing: '1.5px' }}\n      >\n        {title}\n      </Typography>\n      <Carousel\n        swipeable\n        ssr\n        keyBoardControl\n        afterChange={(_, { currentSlide }) => {\n          setLinearProgress(calculateProgress(currentSlide))\n        }}\n        autoPlay={autoplay}\n        autoPlaySpeed={1000}\n        containerClass=\"carousel-container\"\n        customRightArrow={<MaterialArrowButton direction=\"right\" />}\n        customLeftArrow={<MaterialArrowButton direction=\"left\" />}\n        removeArrowOnDeviceType={['tablet', 'mobile']}\n        responsive={responsive}\n        rtl={theme.direction === 'rtl'}\n        itemClass=\"carousel-item\"\n        {...props}\n      >\n        {children}\n      </Carousel>\n      <Box maxWidth={400} margin=\"1.5em auto\">\n        <LinearProgress variant=\"determinate\" value={progress} />\n      </Box>\n    </Box>\n  )\n}\n", "import { Button } from '@mui/material'\nimport { styled } from '@mui/material/styles'\n\nexport type ArrowButtonProps = typeof Button & {\n  direction: 'left' | 'right'\n  onClick: any\n}\n\nexport const ArrowButtonPrimitive = styled(Button)(\n  ({ direction }: ArrowButtonProps) => `\n    position: absolute;\n    bottom: 0;\n    ${[direction]}: -1px;\n    padding: 6px 2px;\n    border-radius: 999px;\n`\n)\n", "import { useState } from 'react'\n\nimport { useSearchParams } from '@remix-run/react'\n\nimport { Box, TextField, Typography } from '@mui/material'\n\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker'\n\nimport dayjs from 'dayjs'\n\ntype ScheduledGamesTitleProps = { season: string }\n\nconst dateFormat = 'YYYY-MM-DD'\n\nexport const ScheduledGamesTitle = ({ season }: ScheduledGamesTitleProps) => {\n  const [search, setSearch] = useSearchParams()\n  const [dates, setDates] = useState({\n    startDate: search.get('startDate') || dayjs().format(dateFormat),\n    endDate: search.get('endDate') || dayjs().add(1, 'week').format(dateFormat),\n  })\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Typography\n          align=\"left\"\n          variant=\"h2\"\n          sx={{ padding: '1rem', letterSpacing: '1.5px' }}\n        >\n          Scheduled Games\n        </Typography>\n        <Box display=\"flex\" columnGap=\"1rem\">\n          <DatePicker\n            views={['day']}\n            label=\"Start Date\"\n            value={dates.startDate}\n            maxDate={dates.endDate}\n            // NOTE: Currently assuming season start was in October. Should make this more accurate.\n            minDate={`${season}-10-01`}\n            onChange={(value) => {\n              const selectedDate = dayjs(String(value)).format(dateFormat)\n\n              setDates({ ...dates, startDate: selectedDate })\n              search.set('startDate', selectedDate)\n              setSearch(search, { replace: true })\n            }}\n            renderInput={(params) => (\n              <TextField {...params} helperText={null} />\n            )}\n          />\n          <DatePicker\n            views={['day']}\n            label=\"End Date\"\n            value={dates.endDate}\n            // NOTE: Currently assuming season end was in April (June for padding). Should make this more accurate.\n            maxDate={`${season + 1}-06-30`}\n            minDate={dates.startDate}\n            onChange={(value) => {\n              const selectedDate = dayjs(String(value)).format(dateFormat)\n\n              setDates({ ...dates, endDate: selectedDate })\n              search.set('endDate', selectedDate)\n              setSearch(search, { replace: true })\n            }}\n            renderInput={(params) => (\n              <TextField {...params} helperText={null} />\n            )}\n          />\n        </Box>\n      </Box>\n    </LocalizationProvider>\n  )\n}\n", "import { GamesDTO, GamesMetaDataDTO } from './dtos'\n\nexport type StatsData = {}\n\nexport type GameData = {\n  id: string\n  fullName: string\n  score: string\n  stats?: StatsData\n}\n\nexport type GameResults = {\n  data: GamesDTO[]\n  meta: GamesMetaDataDTO\n}\n\nexport enum GameStatus {\n  '1st Qtr' = '1st Qtr',\n  '2nd Qtr' = '2nd Qtr',\n  'Halftime' = 'Halftime',\n  '3rd Qtr' = '3rd Qtr',\n  '4th Qtr' = '4th Qtr',\n  'Final' = 'Final',\n}\n", "import { GameStatus } from 'utilities/api/types'\n\nimport { json } from '@remix-run/server-runtime'\nimport { getGames } from 'utilities/api/service'\nimport { LoaderArgs, SerializeFrom } from '@remix-run/node'\n\nexport type HomeLoaderData = SerializeFrom<typeof loader>\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const url = new URL(request.url)\n  const startDate = url.searchParams.get('startDate') || undefined\n  const endDate = url.searchParams.get('endDate') || undefined\n\n  const liveGamesRequest = await getGames()\n  const liveGames = liveGamesRequest?.data.filter(\n    (game) => game.date === new Date().toDateString()\n  )\n\n  let scheduledGamesRequest\n  let scheduledGames = liveGamesRequest?.data.filter(\n    (game) => !(<any>Object).values(GameStatus).includes(game.status)\n  )\n\n  if ((startDate || endDate) && liveGamesRequest) {\n    scheduledGamesRequest = await getGames(\n      Number.parseInt(liveGamesRequest?.meta.season),\n      startDate,\n      endDate\n    )\n    scheduledGames = scheduledGamesRequest?.data\n  }\n\n  return json({\n    liveGames: liveGames || [],\n    scheduledGames: scheduledGames || [],\n    metaData: {\n      live: liveGamesRequest?.meta,\n      scheduled: scheduledGamesRequest?.meta,\n    },\n  })\n}\n", "import { fetch } from '@remix-run/node'\n\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport { GameResults, GameStatus } from './types'\n\nimport type { GamesDTO } from './dtos'\n\ndayjs.extend(utc)\n\nconst currentDate = new Date()\nconst year = currentDate.getFullYear()\nconst defaultStartDate = currentDate.toISOString().split('T')[0]\n\ncurrentDate.setDate(currentDate.getDate() + 7)\nconst defaultEndDate = currentDate.toISOString().split('T')[0]\n\nconst isGameLive = (game: GamesDTO) =>\n  (<any>Object).values(GameStatus).includes(game.status)\n\nconst formatGameTime = (date: string, timeLocal: string) => {\n  const time = timeLocal.split(' ').shift()\n  const isoDate = new Date(date).toISOString().split('T').shift()\n\n  return dayjs.utc(`${isoDate} ${time}`).format()\n}\n/* \nNOTES:\n\nThis method grabs the data necessary to fetch the last 10 or so games.\nThe method returns an async Promise that can either \"resolves\" (no errors & has data) or \"rejects\" (errors & does not have data).\n\nPSEUDO - I \"metaRequest\" promise(toResolve, orToReject) => { ...when code } is done.\n\nKeep the above PSEUDO in mind for the rest of the methods below.\n*/\n\n// export const metaRequest = async (season = new Date().getFullYear()) => {\n//   let responseData = { season }\n\n//   await fetch(\n//     `https://www.balldontlie.io/api/v1/games?seasons[]=${season}&per_page=10`\n//   )\n\n//   return new Promise((resolve, reject) => {\n//     https\n//       .get(\n//         `https://www.balldontlie.io/api/v1/games?seasons[]=${season}&per_page=10`,\n//         (res) => {\n//           console.log(`status: ${res.statusCode}`)\n\n//           res.on('data', (chunk) => {\n//             chunkData.push(chunk)\n//           })\n\n//           res.on('end', () => {\n//             console.log(`finish grabbing game meta data.`)\n\n//             const parseChunk = JSON.parse(Buffer.concat(chunkData).toString())\n\n//             responseData.last_page = parseChunk?.meta?.total_pages\n//             responseData.statusCode =\n//               parseChunk?.data.length > 0 ? res.statusCode : 404\n//             responseData.message =\n//               res.statusCode === 200 && parseChunk.data.length !== 0\n//                 ? 'OK'\n//                 : failureMessage\n\n//             resolve(responseData)\n//           })\n//         }\n//       )\n//       .on('error', (error) => {\n//         console.error(error)\n//         responseData.statusCode = 500\n//         responseData.message = 'INTERNAL ERROR: See logs for details.'\n\n//         reject(responseData)\n//       })\n//   })\n// }\n\nexport const mapGamesData = (gamesData: any): GamesDTO[] => {\n  const mappedGamesData: GamesDTO[] = gamesData.map(\n    ({ home_team, visitor_team, ...game }: any) => ({\n      home_team: {\n        id: home_team.id,\n        fullName: home_team.full_name,\n        score: game.home_team_score,\n        stats: null,\n      },\n      visitor_team: {\n        id: visitor_team.id,\n        fullName: visitor_team.full_name,\n        score: game.visitor_team_score,\n        stats: null,\n      },\n      id: game.id,\n      status: game.status as GameStatus | string,\n      date: dayjs.utc(game.date).format('ddd MMM DD YYYY'),\n    })\n  )\n\n  return mappedGamesData.sort((gameOne, gameTwo) => {\n    const gameOneLive = isGameLive(gameOne)\n    const gameTwoLive = isGameLive(gameTwo)\n\n    const gameOneTime = formatGameTime(\n      gameOne.date,\n      gameOneLive ? '' : gameOne.status\n    )\n    const gameTwoTime = formatGameTime(\n      gameTwo.date,\n      gameTwoLive ? '' : gameTwo.status\n    )\n\n    if (gameOneTime > gameTwoTime) {\n      return 1\n    }\n\n    if (gameOneTime < gameTwoTime) {\n      return -1\n    }\n\n    return 0\n  })\n}\n\nexport const getGames = async (\n  season = year,\n  startDate: string = defaultStartDate,\n  endDate: string = defaultEndDate\n): Promise<GameResults | undefined> => {\n  try {\n    const gamesResponse = await fetch(\n      `https://www.balldontlie.io/api/v1/games?seasons[]=${season}&start_date=${startDate}&end_date=${endDate}&per_page=100`\n    )\n\n    const gamesResponseData = await gamesResponse.json()\n\n    // Retry recursively w/ different year\n    if (gamesResponse.status === 200 && gamesResponseData.data.length === 0) {\n      return getGames(season - 1, startDate, endDate)\n    }\n\n    return {\n      data: mapGamesData(gamesResponseData.data),\n      meta: { ...gamesResponseData.meta, season },\n    }\n  } catch (err) {\n    console.error(err)\n  }\n}\n", "export default {'version':'1be16700','entry':{'module':'/build/entry.client-UHCIH35A.js','imports':['/build/_shared/chunk-SQ3MN6Q3.js','/build/_shared/chunk-X76OAK42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-JKUAJKQT.js','imports':['/build/_shared/chunk-XZNDN5SM.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-XVNO4JOI.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-1BE16700.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "createCache", "import_styles", "import_react", "createEmotionServer", "CssBaseline", "import_react", "import_material", "import_material", "import_react", "import_material", "import_react", "import_material", "import_styles", "import_styles", "import_material", "theme", "Carousel", "import_react", "import_material", "dayjs", "import_material", "import_dayjs", "dayjs", "GameStatus", "import_dayjs", "dayjs", "utc"]
}
