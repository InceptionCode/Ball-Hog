{
  "version": 3,
  "sources": ["../../src/root.tsx", "../../src/Layout/footer/index.tsx", "../../src/Layout/header/index.tsx", "../../src/Layout/index.tsx"],
  "sourcesContent": ["import reactCarouselStyles from 'react-multi-carousel/lib/styles.css'\nimport globalStyles from '~/css/global-styles.css'\n\nimport { useContext } from 'react'\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n} from '@remix-run/react'\n\nimport { StylesContext, theme } from '~/css-theme'\n\nimport Layout from '~/Layout'\n\nimport type { LinksFunction, MetaFunction } from '@remix-run/node'\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'Ball Hog',\n  viewport: 'width=device-width,initial-scale=1',\n})\n\nexport const links: LinksFunction = () => {\n  return [\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap',\n    },\n    {\n      rel: 'stylesheet',\n      href: reactCarouselStyles,\n    },\n    {\n      rel: 'stylesheet',\n      href: globalStyles,\n    },\n  ]\n}\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode\n  title?: string\n}) {\n  const styleData = useContext(StylesContext)\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta name=\"theme-color\" content={theme.palette.primary.main} />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n        {styleData?.map(({ key, ids, css }) => (\n          <style\n            key={key}\n            data-emotion={`${key} ${ids.join(' ')}`}\n            dangerouslySetInnerHTML={{ __html: css }}\n            suppressHydrationWarning\n          />\n        ))}\n      </head>\n      <body>\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === 'development' && <LiveReload />}\n      </body>\n    </html>\n  )\n}\n\n// https://remix.run/api/conventions#default-export\n// https://remix.run/api/conventions#route-filenames\n\n// NOTE: When I create a Layout add it here. Make Outlet the child of <Layout />\nexport default function App() {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  )\n}\n\n// https://remix.run/docs/en/v1/api/conventions#errorboundary\n// NOTE: When I create a Layout add it here. Make root <div /> the child of <Layout />\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error)\n\n  return (\n    <Document title=\"Error!\">\n      <div>\n        <h1>Woaa there baller!</h1>\n        <p>{error.message}</p>\n        <hr />\n        <p>We gotta call timeout here something isn't right on our end!!</p>\n      </div>\n    </Document>\n  )\n}\n\n// https://remix.run/docs/en/v1/api/conventions#catchboundary\nexport function CatchBoundary() {\n  const caught = useCatch()\n\n  let message\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </p>\n      )\n      break\n    case 404:\n      message = (\n        <p>Oops! Looks like you tried to visit a page that does not exist.</p>\n      )\n      break\n\n    default:\n      throw new Error(caught.data || caught.statusText)\n  }\n\n  // NOTE: When I create a Layout add it here. Make root <h1> the child of <Layout />\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <h1>\n        {caught.status}: {caught.statusText}\n      </h1>\n      {message}\n    </Document>\n  )\n}\n", "import { Box, Container } from '@mui/material'\n\nexport const Footer = (props) => (\n  <>\n    <Box className=\"placeholder-header\" padding=\"4rem\">\n      <h1>FOOTER</h1>\n      <Container\n        maxWidth=\"xl\"\n        sx={{ padding: 0 }}\n        className=\"placeholder-navigation\"\n      >\n        <h1>FOOTER CONTENT</h1>\n      </Container>\n    </Box>\n  </>\n)\n", "import { Box, Container } from '@mui/material'\n\nexport const Header = (props) => (\n  <>\n    <Box className=\"placeholder-header\" padding=\"4rem\">\n      <h1>HEADER</h1>\n    </Box>\n    <Container\n      maxWidth=\"xl\"\n      sx={{ padding: 0 }}\n      className=\"placeholder-navigation\"\n    >\n      <h1>NAVIGATION</h1>\n    </Container>\n  </>\n)\n", "import { Container } from '@mui/material'\nimport { PropsWithChildren } from 'react'\nimport { Footer } from './footer'\nimport { Header } from './header'\n\nexport default function Layout({ children }: PropsWithChildren) {\n  return (\n    <>\n      <Header />\n      <Container maxWidth=\"xl\" sx={{ paddingTop: '2em' }}>\n        {children}\n      </Container>\n      <Footer />\n    </>\n  )\n}\n"],
  "mappings": "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",
  "names": []
}
