{
  "version": 3,
  "sources": ["../../app/root.tsx", "../../node_modules/@mui/material/esm/GlobalStyles/GlobalStyles.js", "../../node_modules/@mui/material/esm/CssBaseline/CssBaseline.js", "../../css-theme/emotion-cache.js", "../../css-theme/theme.js"],
  "sourcesContent": ["import reactCarouselStyles from 'react-multi-carousel/lib/styles.css'\n\nimport type { LinksFunction, MetaFunction } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react'\nimport { CacheProvider, Theme, ThemeProvider } from '@emotion/react'\nimport { CssBaseline } from '@mui/material'\nimport { createEmotionCache } from 'css-theme/emotion-cache'\n\nimport theme from '../css-theme/theme'\nimport { ReactNode } from 'react'\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'Ball Hog',\n  viewport: 'width=device-width,initial-scale=1',\n})\n\nexport const links: LinksFunction = () => {\n  return [\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap',\n    },\n    {\n      rel: 'stylesheet',\n      href: reactCarouselStyles,\n    },\n  ]\n}\n\nconst cache = createEmotionCache()\n\nexport interface DocumentProps {\n  children: ReactNode\n  theme: Theme\n}\n\nexport default function App() {\n  return (\n    <Document theme={theme}>\n      <CssBaseline />\n      <Outlet />\n    </Document>\n  )\n}\n\nconst Document = ({ children, theme }: DocumentProps) => {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n        <style id=\"emotion\" suppressHydrationWarning />\n      </head>\n      <CacheProvider value={cache}>\n        <ThemeProvider theme={theme}>\n          <body data-theme={theme}>\n            {children}\n            <ScrollRestoration />\n            <Scripts />\n            <LiveReload />\n          </body>\n        </ThemeProvider>\n      </CacheProvider>\n    </html>\n  )\n}\n", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from '../styles/defaultTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, _extends({}, props, {\n    defaultTheme: defaultTheme\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.shape({\n    __emotion_styles: PropTypes.any.isRequired\n  }), PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n\n  const colorSchemeStyles = {};\n\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n\n  return defaultStyles;\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;", "import createCache from '@emotion/cache'\n\nexport function createEmotionCache() {\n  return createCache({ key: 'css' })\n}\n", "import { createTheme } from '@mui/material/styles'\nimport { red } from '@mui/material/colors'\n\n// Create a theme instance.\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n})\n\nexport default theme\n"],
  "mappings": "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",
  "names": ["import_react", "GlobalStyles", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "theme", "_jsxs", "_jsx", "PropTypes", "createCache", "theme"]
}
